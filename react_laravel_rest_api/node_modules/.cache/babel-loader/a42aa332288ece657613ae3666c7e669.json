{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\"; // import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = () => {\n  _s();\n\n  const [file, setSelectedFile] = React.useState({\n    file: undefined,\n    previewURI: undefined\n  });\n  const initialValues = {\n    title: \"\",\n    serialNumber: null,\n    img: undefined\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"Title is required\").min(8, \"Title must be at least 8 characters\").max(100, \"Title cannot be more than 100 characters\"),\n    serialNumber: Yup.string().min(4, \"Serial number must be at least 4 characters\").max(16, \"Serial number cannot be more than 16 characters\"),\n    img: Yup.mixed().test(\"fileSize\", \"File size too large, max file size is 1 Mb\", file => file ? file.size <= 1100000 : true).test(\"fileType\", \"Incorrect file type\", file => file ? [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(file.type) : true)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary rounded-0\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      \"data-bs-whatever\": \"@mdo\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"exampleModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content rounded-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-primary rounded-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"exampleModalLabel\",\n              children: \"New message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              enableReinitialize: true,\n              validationSchema: validationSchema,\n              initialValues: initialValues,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"title\",\n                    label: \"Title\",\n                    component: TextField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"serialNumber\",\n                    label: \"Serial Number\",\n                    component: TextField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"img\",\n                    children: _ref => {\n                      let {\n                        form,\n                        ...rest\n                      } = _ref;\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"img\",\n                          onBlur: form.handleBlur,\n                          onChange: _ref2 => {\n                            let {\n                              currentTarget\n                            } = _ref2;\n                            const file = currentTarget.files[0];\n                            const reader = new FileReader();\n\n                            if (file) {\n                              reader.onloadend = () => {\n                                setSelectedFile({\n                                  file,\n                                  previewURI: reader.result\n                                });\n                              };\n\n                              reader.readAsDataURL(file);\n                              form.setFieldValue(\"img\", file);\n                            }\n                          } // ref={inputFile}\n                          ,\n                          type: \"file\",\n                          style: {\n                            paddingTop: 10\n                          },\n                          accept: \".png,.jpg,.jpeg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 82,\n                          columnNumber: 61\n                        }, this), form.errors.img && form.touched.img ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            paddingTop: 5,\n                            color: \"#B2484D\",\n                            fontSize: \".75rem\",\n                            fontFamily: \"Segoe UI\"\n                          },\n                          children: JSON.stringify(form.errors.img)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 65\n                        }, this) : null]\n                      }, void 0, true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUsers, \"OOvPcwhlFdoAIpP/3t6N6KShxSc=\");\n\n_c = AddUsers;\nexport default AddUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js"],"names":["React","useState","useEffect","Link","axios","useForm","yupResolver","Yup","useNavigate","store","Navbar","AddUsers","file","setSelectedFile","undefined","previewURI","initialValues","title","serialNumber","img","validationSchema","object","string","required","min","max","mixed","test","size","includes","type","TextField","form","rest","handleBlur","currentTarget","files","reader","FileReader","onloadend","result","readAsDataURL","setFieldValue","paddingTop","errors","touched","color","fontSize","fontFamily","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\";\n// import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nconst AddUsers = () => {\n\n    const [file, setSelectedFile] = React.useState({\n        file: undefined,\n        previewURI: undefined\n    });\n    const initialValues = {\n        title: \"\",\n        serialNumber: null,\n        img: undefined\n    };\n\n    const validationSchema = Yup.object({\n        title: Yup.string()\n            .required(\"Title is required\")\n            .min(8, \"Title must be at least 8 characters\")\n            .max(100, \"Title cannot be more than 100 characters\"),\n\n        serialNumber: Yup.string()\n            .min(4, \"Serial number must be at least 4 characters\")\n            .max(16, \"Serial number cannot be more than 16 characters\"),\n        img: Yup.mixed()\n            .test(\"fileSize\", \"File size too large, max file size is 1 Mb\", (file) =>\n                file ? file.size <= 1100000 : true\n            )\n            .test(\"fileType\", \"Incorrect file type\", (file) =>\n                file\n                    ? [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(file.type)\n                    : true\n            )\n    });\n\n    return (\n\n\n        <div className=\"text-dark\">\n\n            <button type=\"button\" className=\"btn btn-primary rounded-0\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\">Add User</button>\n\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content rounded-0\">\n                        <div className=\"modal-header bg-primary rounded-0\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">New message</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div className=\"modal-body\">\n\n                            <Formik\n                                enableReinitialize\n                                validationSchema={validationSchema}\n                                initialValues={initialValues}\n                            >\n                                {() => {\n                                    return (\n                                        <Form>\n                                            <Field name=\"title\" label=\"Title\" component={TextField} />\n                                            <Field\n                                                name=\"serialNumber\"\n                                                label=\"Serial Number\"\n                                                component={TextField}\n                                            />\n                                            <Field name=\"img\">\n                                                {({ form, ...rest }) => {\n                                                    return (\n                                                        <>\n                                                            <input\n                                                                name=\"img\"\n                                                                onBlur={form.handleBlur}\n                                                                onChange={({ currentTarget }) => {\n                                                                    const file = currentTarget.files[0];\n                                                                    const reader = new FileReader();\n\n                                                                    if (file) {\n                                                                        reader.onloadend = () => {\n                                                                            setSelectedFile({\n                                                                                file,\n                                                                                previewURI: reader.result\n                                                                            });\n                                                                        };\n                                                                        reader.readAsDataURL(file);\n                                                                        form.setFieldValue(\"img\", file);\n                                                                    }\n                                                                }}\n                                                                // ref={inputFile}\n                                                                type=\"file\"\n                                                                style={{ paddingTop: 10 }}\n                                                                accept=\".png,.jpg,.jpeg\"\n                                                            />\n                                                            {form.errors.img && form.touched.img ? (\n                                                                <div\n                                                                    style={{\n                                                                        paddingTop: 5,\n                                                                        color: \"#B2484D\",\n                                                                        fontSize: \".75rem\",\n                                                                        fontFamily: \"Segoe UI\"\n                                                                    }}\n                                                                >\n                                                                    {JSON.stringify(form.errors.img)}\n                                                                </div>\n                                                            ) : null}\n                                                        </>\n                                                    );\n                                                }}\n                                            </Field>\n                                            <button type=\"submit\">Submit</button>\n                                        </Form>\n                                    );\n                                }}\n                            </Formik>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddUsers;"]},"metadata":{},"sourceType":"module"}