{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\"; // import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = props => {\n  _s();\n\n  var _errors$phoneNumber, _errors$doj, _errors$image, _errors$document, _errors$gender, _errors$about;\n\n  const [users, setUsers] = useState({});\n  let isRendered = useRef(false);\n  let navigate = useNavigate();\n\n  const onSubmit = data => {\n    // console.log(\"test props\",data)\n    axios.get('/sanctum/csrf-cookie').then(response => {\n      axios.post('/api/add_users_info/{props.user.id}', data).then(res => {\n        console.log(\"test props\", res.data);\n\n        if (res.data.status === 200) {\n          console.log(\"test props 2\", res.data);\n          localStorage.setItem('auth_token', res.data.token); // localStorage.setItem('auth_name', res.data.username);\n\n          navigate('/admin/dashboard');\n          store.addNotification({\n            title: \"Success!\",\n            message: \"User Information Added Successfully !!\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 3000,\n              onScreen: false\n            }\n          });\n        }\n      }).catch(err => console.log(err));\n    });\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const validationSchema = Yup.object().shape({\n    phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid').min(10, \"too short\").max(10, \"too long\"),\n    // name: Yup.string().required('Fullname is required'),\n    // username: Yup.string()\n    //     .required('Username is required')\n    //     .min(6, 'Username must be at least 6 characters')\n    //     .max(20, 'Username must not exceed 20 characters'),\n    image: Yup.mixed().test(\"numberOfFiles\", \"Image field is required\", value => {\n      if (value.length > 0) return true;\n      return false;\n    }).test(\"fileSize\", \"error information\", value => {\n      if (value.length > 0) return value[0].size <= 5242880;\n      return false;\n    }).test(\"fileType\", \"error information\", value => {\n      if (value.length === 0) return false;\n\n      for (var i = 0; i < value.length; i++) {\n        if (![\"image/jpeg\", \"image/png\", \"image/jpg\"].includes(value[i].type)) return false;\n      }\n\n      return true;\n    }),\n    // email: Yup.string()\n    //     .required('Email is required')\n    //     .email('Email is invalid'),\n    doj: Yup.string().required('DOJ field is required'),\n    document: Yup.mixed().test(\"numberOfFiles\", \"CV field is required\", value => {\n      if (value.length > 0) return true;\n      return false;\n    }).test(\"fileSize\", \"Size Error\", value => {\n      if (value.length > 0) return value[0].size <= 5242880;\n      return false;\n    }).test(\"fileType\", \"Invalid File Format\", value => {\n      if (value.length === 0) return false;\n\n      for (var i = 0; i < value.length; i++) {\n        if (![\"application/pdf\", \"application/doc\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.oasis.opendocument.text\"].includes(value[i].type)) return false;\n      }\n\n      return true;\n    }),\n    gender: Yup.string().required('Gender field is required'),\n    about: Yup.string().required('About field is required') // password: Yup.string()\n    //     .required('Password is required')\n    //     .min(8, 'Password must be at least 8 characters')\n    //     .max(40, 'Password must not exceed 40 characters'),\n    // confirm_password: Yup.string()\n    //     .required('Confirm Password is required')\n    //     .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      method: \"POST\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Phone Number :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phoneNumber\",\n          ...register('phoneNumber'),\n          className: `form-control rounded-0 ${errors.phoneNumber ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DOJ :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"doj\",\n          ...register('doj'),\n          className: `form-control rounded-0 ${errors.doj ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$doj = errors.doj) === null || _errors$doj === void 0 ? void 0 : _errors$doj.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"image\",\n          ...register('image'),\n          className: `form-control rounded-0 ${errors.image ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"CV :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"document\",\n          ...register('document'),\n          className: `form-control rounded-0 ${errors.document ? 'is-invalid' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$document = errors.document) === null || _errors$document === void 0 ? void 0 : _errors$document.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Gender :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          type: \"text\",\n          name: \"gender\",\n          ...register('gender'),\n          className: `form-control select rounded-0 ${errors.gender ? 'is-invalid' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Female\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$gender = errors.gender) === null || _errors$gender === void 0 ? void 0 : _errors$gender.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"About :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          name: \"about\",\n          ...register('about'),\n          className: `form-control rounded-0 ${errors.about ? 'is-invalid' : ''}`,\n          placeholder: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"invalid-feedback\",\n          children: (_errors$about = errors.about) === null || _errors$about === void 0 ? void 0 : _errors$about.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary rounded-0\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 35\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 33\n  }, this);\n};\n\n_s(AddUsers, \"4RQxgp0q+gHLB4tMcM9S6AbYvEM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = AddUsers;\nexport default AddUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js"],"names":["React","useState","useEffect","useRef","Link","axios","useForm","yupResolver","Yup","useNavigate","store","Navbar","AddUsers","props","users","setUsers","isRendered","navigate","onSubmit","data","get","then","response","post","res","console","log","status","localStorage","setItem","token","addNotification","title","message","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","catch","err","phoneRegExp","validationSchema","object","shape","phoneNumber","string","matches","min","max","image","mixed","test","value","length","size","i","includes","doj","required","document","gender","about","register","handleSubmit","reset","formState","errors","resolver"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\";\n// import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nconst AddUsers = (props) => {\n    const [users, setUsers] = useState({});\n    let isRendered = useRef(false);\n  \n\n    let navigate = useNavigate();\n    const onSubmit = data => {\n      // console.log(\"test props\",data)\n       \n        axios.get('/sanctum/csrf-cookie').then(response => {\n            axios.post('/api/add_users_info/{props.user.id}', data)\n           \n                .then(res => {\n                  console.log(\"test props\",res.data)\n                    if (res.data.status === 200) {\n                      console.log(\"test props 2\",res.data)\n                        localStorage.setItem('auth_token', res.data.token);\n                        // localStorage.setItem('auth_name', res.data.username);\n                        navigate('/admin/dashboard');\n                        store.addNotification({\n                            title: \"Success!\",\n                            message: \"User Information Added Successfully !!\",\n                            type: \"success\",\n                            insert: \"top\",\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 3000,\n                                onScreen: false\n                            }\n                        });\n                    }\n\n                   \n\n                })\n                .catch(err => console.log(err));\n        });\n    };\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n    const validationSchema = Yup.object().shape({\n        phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\n        .min(10, \"too short\")\n        .max(10, \"too long\"),\n        // name: Yup.string().required('Fullname is required'),\n        // username: Yup.string()\n        //     .required('Username is required')\n        //     .min(6, 'Username must be at least 6 characters')\n        //     .max(20, 'Username must not exceed 20 characters'),\n        image: Yup.mixed()\n        .test(\n          \"numberOfFiles\",\n          \"Image field is required\",\n          (value) => {\n            if (value.length > 0) return true;\n            return false;\n          }\n        ).test(\"fileSize\", \"error information\", (value) => {\n            if (value.length > 0) return value[0].size <= 5242880;\n            return false;\n          }).test(\n            \"fileType\",\n            \"error information\",\n            (value) => {\n              if (value.length === 0) return false;\n              for (var i = 0; i < value.length; i++) {\n                if (\n                  ![\"image/jpeg\", \"image/png\", \"image/jpg\"].includes(value[i].type)\n                )\n                  return false;\n              }\n              return true;\n            }\n          ),\n\n        // email: Yup.string()\n        //     .required('Email is required')\n        //     .email('Email is invalid'),\n\n        doj: Yup.string().required('DOJ field is required'),\n\n        document: Yup.mixed()\n        .test(\n          \"numberOfFiles\",\n          \"CV field is required\",\n          (value) => {\n            if (value.length > 0) return true;\n            return false;\n          }\n        ).test(\"fileSize\", \"Size Error\", (value) => {\n            if (value.length > 0) return value[0].size <= 5242880;\n            return false;\n          }).test(\n            \"fileType\",\n            \"Invalid File Format\",\n            (value) => {\n              if (value.length === 0) return false;\n              for (var i = 0; i < value.length; i++) {\n                if (\n                  ![\"application/pdf\", \"application/doc\",\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.oasis.opendocument.text\"].includes(value[i].type)\n                )\n                  return false;\n              }\n              return true;\n            }\n          ),\n        \n        gender: Yup.string()\n            .required('Gender field is required'),\n        \n        about: Yup.string()\n        .required('About field is required'),\n        // password: Yup.string()\n        //     .required('Password is required')\n        //     .min(8, 'Password must be at least 8 characters')\n        //     .max(40, 'Password must not exceed 40 characters'),\n        // confirm_password: Yup.string()\n        //     .required('Confirm Password is required')\n        //     .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n        // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(validationSchema) });\n\n    \n\n    return (\n\n\n                                <div className=\"container\">\n                                  <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                                    <div className=\"form-group mb-3\">\n                                        <label>Phone Number :</label>\n                                        <input type=\"text\" name=\"phoneNumber\" {...register('phoneNumber')} className={`form-control rounded-0 ${errors.phoneNumber ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.phoneNumber?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>DOJ :</label>\n                                        <input type=\"date\" name=\"doj\" {...register('doj')} className={`form-control rounded-0 ${errors.doj ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.doj?.message}</div>\n                                    </div>\n                                    \n                                    <div className=\"form-group mb-3\">\n                                        <label>Image:</label>\n                                        <input type=\"file\" name=\"image\" {...register('image')} className={`form-control rounded-0 ${errors.image ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.image?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>CV :</label>\n                                        <input type=\"file\" name=\"document\" {...register('document')} className={`form-control rounded-0 ${errors.document ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.document?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>Gender :</label>\n                                        <select type=\"text\" name=\"gender\" {...register('gender')} className={`form-control select rounded-0 ${errors.gender ? 'is-invalid' : ''}`}>\n                                            <option value=\"\">Select Gender</option>\n                                            <option>Male</option>\n                                            <option>Female</option>\n                                        </select>\n                                        <div className=\"invalid-feedback\">{errors.gender?.message}</div>\n                                    </div>\n\n                                <div className=\"form-group mb-3\">\n                                        <label>About :</label>\n                                        <textarea type=\"text\" name=\"about\" {...register('about')} className={`form-control rounded-0 ${errors.about ? 'is-invalid' : ''}`} placeholder=\"About\" />\n                                        <div className=\"invalid-feedback\">{errors.about?.message}</div>\n                                    </div>\n                                    {/* <div className=\"form-group mb-3\">\n                                        <label>Password:</label>\n                                        <input type=\"password\" name=\"password\" {...register('password')} className={`form-control rounded-0 ${errors.password ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>Confirm Password:</label>\n                                        <input type=\"password\" name=\"confirm_password\" {...register('confirm_password')} className={`form-control rounded-0 ${errors.confirm_password ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.confirm_password?.message}</div>\n                                    </div> */}\n                                    <div className=\"form-group mb-3\">\n                                        <button type=\"submit\" className=\"btn btn-primary rounded-0\">Submit</button>\n                                        {/* <button type=\"button\" onClick={reset} className=\"btn btn-warning float-right ms-2\">Reset</button> */}\n                                    </div>\n                                </form>\n                                </div>\n                            \n    )\n}\n\nexport default AddUsers;"]},"metadata":{},"sourceType":"module"}