{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/auth/Register.js\";\nimport React from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  fullname: Yup.string().required('Fullname is required'),\n  username: Yup.string().required('Username is required').min(6, 'Username must be at least 6 characters').max(20, 'Username must not exceed 20 characters'),\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string().required('Password is required').min(6, 'Password must be at least 6 characters').max(40, 'Password must not exceed 40 characters'),\n  confirmPassword: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n  acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n});\nconst {\n  register,\n  handleSubmit,\n  reset,\n  formState: {\n    errors\n  }\n} = useForm({\n  resolver: yupResolver(validationSchema)\n});\n\nfunction Register() {\n  var _errors$fullname, _errors$email, _errors$password, _errors$confirm_passw;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Full Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"fullname\",\n                  ...register('fullname'),\n                  className: `form-control ${errors.fullname ? 'is-invalid' : ''}`,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$fullname = errors.fullname) === null || _errors$fullname === void 0 ? void 0 : _errors$fullname.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  ...register('email'),\n                  className: `form-control ${errors.email ? 'is-invalid' : ''}`,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  ...register('password'),\n                  className: `form-control ${errors.password ? 'is-invalid' : ''}`,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Confirm Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"confirm_password\",\n                  ...register('confirm_password'),\n                  className: `form-control ${errors.confirm_password ? 'is-invalid' : ''}`,\n                  value: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$confirm_passw = errors.confirm_password) === null || _errors$confirm_passw === void 0 ? void 0 : _errors$confirm_passw.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/auth/Register.js"],"names":["React","useForm","yupResolver","Yup","validationSchema","object","shape","fullname","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","Register","onSubmit","message","confirm_password"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AACxCC,EAAAA,QAAQ,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CAD8B;AAExCC,EAAAA,QAAQ,EAAEP,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,sBADJ,EAELE,GAFK,CAED,CAFC,EAEE,wCAFF,EAGLC,GAHK,CAGD,EAHC,EAGG,wCAHH,CAF8B;AAMxCC,EAAAA,KAAK,EAAEV,GAAG,CAACK,MAAJ,GACFC,QADE,CACO,mBADP,EAEFI,KAFE,CAEI,kBAFJ,CANiC;AASxCC,EAAAA,QAAQ,EAAEX,GAAG,CAACK,MAAJ,GACLC,QADK,CACI,sBADJ,EAELE,GAFK,CAED,CAFC,EAEE,wCAFF,EAGLC,GAHK,CAGD,EAHC,EAGG,wCAHH,CAT8B;AAaxCG,EAAAA,eAAe,EAAEZ,GAAG,CAACK,MAAJ,GACZC,QADY,CACH,8BADG,EAEZO,KAFY,CAEN,CAACb,GAAG,CAACc,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFM,EAEuB,iCAFvB,CAbuB;AAgBxCC,EAAAA,WAAW,EAAEf,GAAG,CAACgB,IAAJ,GAAWH,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,0BAAzB;AAhB2B,CAAnB,CAAzB;AAmBA,MAAM;AAAEI,EAAAA,QAAF;AAAYC,EAAAA,YAAZ;AAA0BC,EAAAA,KAA1B;AAAiCC,EAAAA,SAAS,EAAE;AAAEC,IAAAA;AAAF;AAA5C,IAA2DvB,OAAO,CAAC;AAAEwB,EAAAA,QAAQ,EAAEvB,WAAW,CAACE,gBAAD;AAAvB,CAAD,CAAxE;;AAGA,SAASsB,QAAT,GAAoB;AAAA;;AAChB,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AAAM,cAAA,QAAQ,EAAEL,YAAY,CAACM,QAAD,CAA5B;AAAwC,cAAA,MAAM,EAAC,MAA/C;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,MAAZ;AAAmB,kBAAA,IAAI,EAAC,UAAxB;AAAA,qBAAuCP,QAAQ,CAAC,UAAD,CAA/C;AAA6D,kBAAA,SAAS,EAAG,gBAAeI,MAAM,CAACjB,QAAP,GAAkB,YAAlB,GAAiC,EAAG,EAA5H;AAA+H,kBAAA,KAAK,EAAC;AAArI;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,gDAAmCiB,MAAM,CAACjB,QAA1C,qDAAmC,iBAAiBqB;AAApD;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAOI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,OAAZ;AAAoB,kBAAA,IAAI,EAAC,OAAzB;AAAA,qBAAqCR,QAAQ,CAAC,OAAD,CAA7C;AAAwD,kBAAA,SAAS,EAAG,gBAAeI,MAAM,CAACX,KAAP,GAAe,YAAf,GAA8B,EAAG,EAApH;AAAuH,kBAAA,KAAK,EAAC;AAA7H;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,6CAAmCW,MAAM,CAACX,KAA1C,kDAAmC,cAAce;AAAjD;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,eAaI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,IAAI,EAAC,UAA5B;AAAA,qBAA2CR,QAAQ,CAAC,UAAD,CAAnD;AAAiE,kBAAA,SAAS,EAAG,gBAAeI,MAAM,CAACV,QAAP,GAAkB,YAAlB,GAAiC,EAAG,EAAhI;AAAmI,kBAAA,KAAK,EAAC;AAAzI;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,gDAAmCU,MAAM,CAACV,QAA1C,qDAAmC,iBAAiBc;AAApD;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAbJ,eAmBI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,IAAI,EAAC,kBAA5B;AAAA,qBAAmDR,QAAQ,CAAC,kBAAD,CAA3D;AAAiF,kBAAA,SAAS,EAAG,gBAAeI,MAAM,CAACK,gBAAP,GAA0B,YAA1B,GAAyC,EAAG,EAAxJ;AAA2J,kBAAA,KAAK,EAAC;AAAjK;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAK,kBAAA,SAAS,EAAC,kBAAf;AAAA,qDAAmCL,MAAM,CAACK,gBAA1C,0DAAmC,sBAAyBD;AAA5D;AAAA;AAAA;AAAA;AAAA,wBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBJ,eAwBI;AAAK,gBAAA,SAAS,EAAC,iBAAf;AAAA,uCACI;AAAQ,kBAAA,IAAI,EAAC,QAAb;AAAsB,kBAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA4CH;;KA7CQF,Q;AA+CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n    fullname: Yup.string().required('Fullname is required'),\n    username: Yup.string()\n        .required('Username is required')\n        .min(6, 'Username must be at least 6 characters')\n        .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string()\n        .required('Email is required')\n        .email('Email is invalid'),\n    password: Yup.string()\n        .required('Password is required')\n        .min(6, 'Password must be at least 6 characters')\n        .max(40, 'Password must not exceed 40 characters'),\n    confirmPassword: Yup.string()\n        .required('Confirm Password is required')\n        .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n});\n\nconst { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(validationSchema) });\n\n\nfunction Register() {\n    return (\n        <div className=\"container py-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">\n                            <h4>Register</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                                <div className=\"form-group mb-3\">\n                                    <label>Full Name:</label>\n                                    <input type=\"text\" name=\"fullname\" {...register('fullname')} className={`form-control ${errors.fullname ? 'is-invalid' : ''}`} value=\"\" />\n                                    <div className=\"invalid-feedback\">{errors.fullname?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Email:</label>\n                                    <input type=\"email\" name=\"email\" {...register('email')} className={`form-control ${errors.email ? 'is-invalid' : ''}`} value=\"\" />\n                                    <div className=\"invalid-feedback\">{errors.email?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Password:</label>\n                                    <input type=\"password\" name=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} value=\"\" />\n                                    <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Confirm Password:</label>\n                                    <input type=\"password\" name=\"confirm_password\" {...register('confirm_password')} className={`form-control ${errors.confirm_password ? 'is-invalid' : ''}`} value=\"\" />\n                                    <div className=\"invalid-feedback\">{errors.confirm_password?.message}</div>\n                                </div>\n                                <div className=\"form-group mb-3\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}