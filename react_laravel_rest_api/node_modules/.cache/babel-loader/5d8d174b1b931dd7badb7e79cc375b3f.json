{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"office-ui-fabric-react\"; // import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = () => {\n  _s();\n\n  const [file, setSelectedFile] = React.useState({\n    file: undefined,\n    previewURI: undefined\n  });\n  const initialValues = {\n    title: \"\",\n    serialNumber: null,\n    img: undefined\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"Title is required\").min(8, \"Title must be at least 8 characters\").max(100, \"Title cannot be more than 100 characters\"),\n    serialNumber: Yup.string().min(4, \"Serial number must be at least 4 characters\").max(16, \"Serial number cannot be more than 16 characters\"),\n    img: Yup.mixed().test(\"fileSize\", \"File size too large, max file size is 1 Mb\", file => file ? file.size <= 1100000 : true).test(\"fileType\", \"Incorrect file type\", file => file ? [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(file.type) : true)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary rounded-0\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      \"data-bs-whatever\": \"@mdo\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"exampleModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content rounded-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-primary rounded-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"exampleModalLabel\",\n              children: \"New message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              enableReinitialize: true,\n              validationSchema: validationSchema,\n              initialValues: initialValues,\n              children: () => {\n                return /*#__PURE__*/_jsxDEV(Form, {\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: \"title\",\n                    label: \"Title\",\n                    component: FormikTextField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"serialNumber\",\n                    label: \"Serial Number\",\n                    component: TextField\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    name: \"img\",\n                    children: _ref => {\n                      let {\n                        form,\n                        ...rest\n                      } = _ref;\n                      return /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          name: \"img\",\n                          onBlur: form.handleBlur,\n                          onChange: _ref2 => {\n                            let {\n                              currentTarget\n                            } = _ref2;\n                            const file = currentTarget.files[0];\n                            const reader = new FileReader();\n\n                            if (file) {\n                              reader.onloadend = () => {\n                                setSelectedFile({\n                                  file,\n                                  previewURI: reader.result\n                                });\n                              };\n\n                              reader.readAsDataURL(file);\n                              form.setFieldValue(\"img\", file);\n                            }\n                          } // ref={inputFile}\n                          ,\n                          type: \"file\",\n                          style: {\n                            paddingTop: 10\n                          },\n                          accept: \".png,.jpg,.jpeg\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 79,\n                          columnNumber: 23\n                        }, this), form.errors.img && form.touched.img ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            paddingTop: 5,\n                            color: \"#B2484D\",\n                            fontSize: \".75rem\",\n                            fontFamily: \"Segoe UI\"\n                          },\n                          children: JSON.stringify(form.errors.img)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 103,\n                          columnNumber: 25\n                        }, this) : null]\n                      }, void 0, true);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    children: \"Submit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 13\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUsers, \"hzaqV6lLHTYviYwXduq6RWh/DyQ=\");\n\n_c = AddUsers;\nexport default AddUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js"],"names":["React","useState","useEffect","Link","axios","Yup","Field","Form","Formik","TextField","AddUsers","file","setSelectedFile","undefined","previewURI","initialValues","title","serialNumber","img","validationSchema","object","string","required","min","max","mixed","test","size","includes","type","FormikTextField","form","rest","handleBlur","currentTarget","files","reader","FileReader","onloadend","result","readAsDataURL","setFieldValue","paddingTop","errors","touched","color","fontSize","fontFamily","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport * as Yup from \"yup\";\nimport { Field, Form, Formik } from \"formik\";\nimport { TextField } from \"office-ui-fabric-react\";\n\n// import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nconst AddUsers = () => {\n\n    const [file, setSelectedFile] = React.useState({\n        file: undefined,\n        previewURI: undefined\n      });\n      const initialValues = {\n        title: \"\",\n        serialNumber: null,\n        img: undefined\n      };\n    \n      const validationSchema = Yup.object({\n        title: Yup.string()\n          .required(\"Title is required\")\n          .min(8, \"Title must be at least 8 characters\")\n          .max(100, \"Title cannot be more than 100 characters\"),\n    \n        serialNumber: Yup.string()\n          .min(4, \"Serial number must be at least 4 characters\")\n          .max(16, \"Serial number cannot be more than 16 characters\"),\n        img: Yup.mixed()\n          .test(\"fileSize\", \"File size too large, max file size is 1 Mb\", (file) =>\n            file ? file.size <= 1100000 : true\n          )\n          .test(\"fileType\", \"Incorrect file type\", (file) =>\n            file\n              ? [\"image/png\", \"image/jpg\", \"image/jpeg\"].includes(file.type)\n              : true\n          )\n      });\n      \n    return (\n        \n            \n        <div className=\"text-dark\">\n\n            <button type=\"button\" className=\"btn btn-primary rounded-0\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\">Add User</button>\n\n\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content rounded-0\">\n                        <div className=\"modal-header bg-primary rounded-0\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">New message</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div className=\"modal-body\">\n\n                        <Formik\n        enableReinitialize\n        validationSchema={validationSchema}\n        initialValues={initialValues}\n      >\n        {() => {\n          return (\n            <Form>\n              <Field name=\"title\" label=\"Title\" component={FormikTextField} />\n              <Field\n                name=\"serialNumber\"\n                label=\"Serial Number\"\n                component={TextField}\n              />\n              <Field name=\"img\">\n                {({ form, ...rest }) => {\n                  return (\n                    <>\n                      <input\n                        name=\"img\"\n                        onBlur={form.handleBlur}\n                        onChange={({ currentTarget }) => {\n                          const file = currentTarget.files[0];\n                          const reader = new FileReader();\n\n                          if (file) {\n                            reader.onloadend = () => {\n                              setSelectedFile({\n                                file,\n                                previewURI: reader.result\n                              });\n                            };\n                            reader.readAsDataURL(file);\n                            form.setFieldValue(\"img\", file);\n                          }\n                        }}\n                        // ref={inputFile}\n                        type=\"file\"\n                        style={{ paddingTop: 10 }}\n                        accept=\".png,.jpg,.jpeg\"\n                      />\n                      {form.errors.img && form.touched.img ? (\n                        <div\n                          style={{\n                            paddingTop: 5,\n                            color: \"#B2484D\",\n                            fontSize: \".75rem\",\n                            fontFamily: \"Segoe UI\"\n                          }}\n                        >\n                          {JSON.stringify(form.errors.img)}\n                        </div>\n                      ) : null}\n                    </>\n                  );\n                }}\n              </Field>\n              <button type=\"submit\">Submit</button>\n            </Form>\n          );\n        }}\n      </Formik>\n\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddUsers;"]},"metadata":{},"sourceType":"module"}