{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\"; // import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = () => {\n  _s();\n\n  const onSubmit = data => {\n    console.log(\"hello\"); // axios.get('/sanctum/csrf-cookie').then(response => {\n    //     axios.post('/api/register', data)\n    //         .then(res => {\n    //             if (res.data.status === 200) {\n    //                 localStorage.setItem('auth_token', res.data.token);\n    //                 localStorage.setItem('auth_name', res.data.username);\n    //                 navigate('/login');\n    //                 store.addNotification({\n    //                     title: \"Success!\",\n    //                     message: \"Registered Successfully\",\n    //                     type: \"success\",\n    //                     insert: \"top\",\n    //                     container: \"top-right\",\n    //                     animationIn: [\"animated\", \"fadeIn\"],\n    //                     animationOut: [\"animated\", \"fadeOut\"],\n    //                     dismiss: {\n    //                         duration: 3000,\n    //                         onScreen: false\n    //                     }\n    //                 });\n    //             }\n    //             if (res.data.status === 422) {\n    //                 reset({ name: res.data.name, password: res.data.password, confirm_password: res.data.confirm_password });\n    //                 store.addNotification({\n    //                     title: \"Failed!\",\n    //                     message: res.data.message.email[0],\n    //                     type: \"danger\",\n    //                     insert: \"top\",\n    //                     container: \"top-right\",\n    //                     animationIn: [\"animated\", \"fadeIn\"],\n    //                     animationOut: [\"animated\", \"fadeOut\"],\n    //                     dismiss: {\n    //                         duration: 3000,\n    //                         onScreen: false\n    //                     }\n    //                 });\n    //             }\n    //         })\n    //         .catch(err => console.log(err));\n    // });\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Fullname is required'),\n    // username: Yup.string()\n    //     .required('Username is required')\n    //     .min(6, 'Username must be at least 6 characters')\n    //     .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters').max(40, 'Password must not exceed 40 characters'),\n    confirm_password: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match') // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-dark\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-primary rounded-0\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#exampleModal\",\n      \"data-bs-whatever\": \"@mdo\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"exampleModal\",\n      tabIndex: \"-1\",\n      \"aria-labelledby\": \"exampleModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content rounded-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header bg-primary rounded-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"exampleModalLabel\",\n              children: \"New message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Full Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 12\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  className: \"form-control rounded-0\",\n                  onChange: e => setName(e.target.value),\n                  placeholder: \"Full Name\",\n                  value: name || '',\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 12\n                }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: errors.name.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"email\",\n                  className: \"form-control rounded-0\",\n                  onChange: e => setEmail(e.target.value),\n                  placeholder: \"Email\",\n                  value: email || '',\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Contact no.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"phonenumber\",\n                  className: \"form-control rounded-0\",\n                  onChange: e => setPhonenumber(e.target.value),\n                  placeholder: \"Contact no.\",\n                  value: phonenumber || '',\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Upload CV\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  name: \"file\",\n                  className: \"form-control rounded-0\",\n                  onChange: e => setSelectedFile(e.target.files[0]),\n                  ref: imageInputRef,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mt-2\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-success\",\n                  name: \"submit\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddUsers, \"AVMO71AGqpdM+T3vMJPUgxhfr3U=\", false, function () {\n  return [useForm];\n});\n\n_c = AddUsers;\nexport default AddUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js"],"names":["React","useState","useEffect","Link","axios","useForm","yupResolver","Yup","useNavigate","AddUsers","onSubmit","data","console","log","validationSchema","object","shape","name","string","required","email","password","min","max","confirm_password","oneOf","ref","register","handleSubmit","reset","formState","errors","resolver","e","setName","target","value","message","setEmail","setPhonenumber","phonenumber","setSelectedFile","files","imageInputRef"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\n\n// import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nconst AddUsers = () => {\n\n    const onSubmit = data => {\n        console.log(\"hello\");\n        // axios.get('/sanctum/csrf-cookie').then(response => {\n        //     axios.post('/api/register', data)\n\n        //         .then(res => {\n\n        //             if (res.data.status === 200) {\n        //                 localStorage.setItem('auth_token', res.data.token);\n        //                 localStorage.setItem('auth_name', res.data.username);\n        //                 navigate('/login');\n        //                 store.addNotification({\n        //                     title: \"Success!\",\n        //                     message: \"Registered Successfully\",\n        //                     type: \"success\",\n        //                     insert: \"top\",\n        //                     container: \"top-right\",\n        //                     animationIn: [\"animated\", \"fadeIn\"],\n        //                     animationOut: [\"animated\", \"fadeOut\"],\n        //                     dismiss: {\n        //                         duration: 3000,\n        //                         onScreen: false\n        //                     }\n        //                 });\n        //             }\n\n        //             if (res.data.status === 422) {\n\n        //                 reset({ name: res.data.name, password: res.data.password, confirm_password: res.data.confirm_password });\n        //                 store.addNotification({\n\n        //                     title: \"Failed!\",\n        //                     message: res.data.message.email[0],\n        //                     type: \"danger\",\n        //                     insert: \"top\",\n        //                     container: \"top-right\",\n        //                     animationIn: [\"animated\", \"fadeIn\"],\n        //                     animationOut: [\"animated\", \"fadeOut\"],\n        //                     dismiss: {\n        //                         duration: 3000,\n        //                         onScreen: false\n        //                     }\n        //                 });\n\n        //             }\n\n        //         })\n        //         .catch(err => console.log(err));\n        // });\n    };\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Fullname is required'),\n        // username: Yup.string()\n        //     .required('Username is required')\n        //     .min(6, 'Username must be at least 6 characters')\n        //     .max(20, 'Username must not exceed 20 characters'),\n        email: Yup.string()\n            .required('Email is required')\n            .email('Email is invalid'),\n        password: Yup.string()\n            .required('Password is required')\n            .min(8, 'Password must be at least 8 characters')\n            .max(40, 'Password must not exceed 40 characters'),\n        confirm_password: Yup.string()\n            .required('Confirm Password is required')\n            .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n        // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(validationSchema) });\n\n\n    return (\n        <div className=\"text-dark\">\n\n            <button type=\"button\" className=\"btn btn-primary rounded-0\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" data-bs-whatever=\"@mdo\">Add User</button>\n            \n\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\">\n                    <div className=\"modal-content rounded-0\">\n                        <div className=\"modal-header bg-primary rounded-0\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">New message</h5>\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div className=\"modal-body\">\n                        \n                        <form onSubmit={handleSubmit}>\n         \n         <div className=\"form-group\">\n           <label>Full Name</label>\n\n           <input type=\"text\" name=\"name\" className=\"form-control rounded-0\" onChange={(e) => setName(e.target.value)} placeholder=\"Full Name\" value={name || ''} required/>\n           {errors.name && <p>{errors.name.message}</p>}\n         </div>\n       \n\n      \n        <div className=\"form-group mt-2\">\n        <label>Email</label>\n\n         <input type=\"text\" name=\"email\"  className=\"form-control rounded-0\" onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" value={email || ''} required />\n        \n        </div>\n      \n        <div className=\"form-group mt-2\">\n        <label>Contact no.</label>\n\n         <input type=\"text\" name=\"phonenumber\" className=\"form-control rounded-0\" onChange={(e) => setPhonenumber(e.target.value)} placeholder=\"Contact no.\" value={phonenumber || ''} required />\n        </div>\n      \n        <div className=\"form-group mt-2\">\n        <label>Upload CV</label>\n         <input type=\"file\" name=\"file\" className=\"form-control rounded-0\" onChange={(e) => setSelectedFile(e.target.files[0])} ref={imageInputRef}  required />\n        </div>\n       \n\n      \n        <div className=\"form-group mt-2\">\n          <button type=\"submit\" className=\"btn btn-success\" name=\"submit\">\n            Submit\n         </button>\n        </div>\n      \n     </form>\n                            \n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddUsers;"]},"metadata":{},"sourceType":"module"}