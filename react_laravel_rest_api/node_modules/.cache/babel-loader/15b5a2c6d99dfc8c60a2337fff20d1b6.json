{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\"; // import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUsers = props => {\n  _s();\n\n  var _errors$phoneNumber, _errors$doj, _errors$image, _errors$document, _errors$gender, _errors$about;\n\n  const [users, setUsers] = useState([]);\n  useEffect(() => {// axios.get('/api/view-users').then(res=> {\n    //     // console.log(\"user test data\",res.data.users);\n    //     if(res.data.status === 200){\n    //         setUsers(res.data.users);\n    //     }\n    // });\n  }, [props]);\n  let navigate = useNavigate();\n\n  const onSubmit = data => {\n    console.log(\"test image data\", data); // axios.get('/sanctum/csrf-cookie').then(response => {\n    //     axios.post('/api/register', data)\n    //         .then(res => {\n    //             if (res.data.status === 200) {\n    //                 localStorage.setItem('auth_token', res.data.token);\n    //                 localStorage.setItem('auth_name', res.data.username);\n    //                 navigate('/login');\n    //                 store.addNotification({\n    //                     title: \"Success!\",\n    //                     message: \"Registered Successfully\",\n    //                     type: \"success\",\n    //                     insert: \"top\",\n    //                     container: \"top-right\",\n    //                     animationIn: [\"animated\", \"fadeIn\"],\n    //                     animationOut: [\"animated\", \"fadeOut\"],\n    //                     dismiss: {\n    //                         duration: 3000,\n    //                         onScreen: false\n    //                     }\n    //                 });\n    //             }\n    //             if (res.data.status === 422) {\n    //                 reset({ name: res.data.name, password: res.data.password, confirm_password: res.data.confirm_password });\n    //                 store.addNotification({\n    //                     title: \"Failed!\",\n    //                     message: res.data.message.email[0],\n    //                     type: \"danger\",\n    //                     insert: \"top\",\n    //                     container: \"top-right\",\n    //                     animationIn: [\"animated\", \"fadeIn\"],\n    //                     animationOut: [\"animated\", \"fadeOut\"],\n    //                     dismiss: {\n    //                         duration: 3000,\n    //                         onScreen: false\n    //                     }\n    //                 });\n    //             }\n    //         })\n    //         .catch(err => console.log(err));\n    // });\n  };\n\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const validationSchema = Yup.object().shape({\n    phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid').min(10, \"too short\").max(10, \"too long\"),\n    // name: Yup.string().required('Fullname is required'),\n    // username: Yup.string()\n    //     .required('Username is required')\n    //     .min(6, 'Username must be at least 6 characters')\n    //     .max(20, 'Username must not exceed 20 characters'),\n    image: Yup.mixed().test(\"numberOfFiles\", \"Image field is required\", value => {\n      if (value.length > 0) return true;\n      return false;\n    }).test(\"fileSize\", \"error information\", value => {\n      if (value.length > 0) return value[0].size <= 5242880;\n      return false;\n    }).test(\"fileType\", \"error information\", value => {\n      if (value.length === 0) return false;\n\n      for (var i = 0; i < value.length; i++) {\n        if (![\"image/jpeg\", \"image/png\", \"image/jpg\"].includes(value[i].type)) return false;\n      }\n\n      return true;\n    }),\n    // email: Yup.string()\n    //     .required('Email is required')\n    //     .email('Email is invalid'),\n    doj: Yup.string().required('DOJ field is required'),\n    document: Yup.mixed().test(\"numberOfFiles\", \"CV field is required\", value => {\n      if (value.length > 0) return true;\n      return false;\n    }).test(\"fileSize\", \"Size Error\", value => {\n      if (value.length > 0) return value[0].size <= 5242880;\n      return false;\n    }).test(\"fileType\", \"Invalid File Format\", value => {\n      if (value.length === 0) return false;\n\n      for (var i = 0; i < value.length; i++) {\n        if (![\"application/pdf\", \"application/doc\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"application/vnd.oasis.opendocument.text\"].includes(value[i].type)) return false;\n      }\n\n      return true;\n    }),\n    gender: Yup.string().required('Gender field is required'),\n    about: Yup.string().required('About field is required') // password: Yup.string()\n    //     .required('Password is required')\n    //     .min(8, 'Password must be at least 8 characters')\n    //     .max(40, 'Password must not exceed 40 characters'),\n    // confirm_password: Yup.string()\n    //     .required('Confirm Password is required')\n    //     .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n    // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    method: \"POST\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"phoneNumber\",\n        ...register('phoneNumber'),\n        className: `form-control rounded-0 ${errors.phoneNumber ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$phoneNumber = errors.phoneNumber) === null || _errors$phoneNumber === void 0 ? void 0 : _errors$phoneNumber.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"DOJ :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"doj\",\n        ...register('doj'),\n        className: `form-control rounded-0 ${errors.doj ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$doj = errors.doj) === null || _errors$doj === void 0 ? void 0 : _errors$doj.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        ...register('image'),\n        className: `form-control rounded-0 ${errors.image ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$image = errors.image) === null || _errors$image === void 0 ? void 0 : _errors$image.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"CV :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"document\",\n        ...register('document'),\n        className: `form-control rounded-0 ${errors.document ? 'is-invalid' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$document = errors.document) === null || _errors$document === void 0 ? void 0 : _errors$document.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Gender :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        type: \"text\",\n        name: \"gender\",\n        ...register('gender'),\n        className: `form-control select rounded-0 ${errors.gender ? 'is-invalid' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$gender = errors.gender) === null || _errors$gender === void 0 ? void 0 : _errors$gender.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"About :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"about\",\n        ...register('about'),\n        className: `form-control rounded-0 ${errors.about ? 'is-invalid' : ''}`,\n        placeholder: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"invalid-feedback\",\n        children: (_errors$about = errors.about) === null || _errors$about === void 0 ? void 0 : _errors$about.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary rounded-0\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 33\n  }, this);\n};\n\n_s(AddUsers, \"zHPwQkzMbO6qimaH2C5MLRRAdic=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = AddUsers;\nexport default AddUsers;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUsers\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/users/AddUsers.js"],"names":["React","useState","useEffect","Link","axios","useForm","yupResolver","Yup","useNavigate","store","Navbar","AddUsers","props","users","setUsers","navigate","onSubmit","data","console","log","phoneRegExp","validationSchema","object","shape","phoneNumber","string","matches","min","max","image","mixed","test","value","length","size","i","includes","type","doj","required","document","gender","about","register","handleSubmit","reset","formState","errors","resolver","message"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\n\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { store } from \"react-notifications-component\";\nimport Navbar from \"../../../layouts/frontend/Navbar\";\n// import { store } from \"react-notifications-component\";\n// import Navbar from \"../../../layouts/frontend/Navbar\";\n\nconst AddUsers = (props) => {\n    const [users, setUsers] = useState([]);\n    \n\n    useEffect(() => {\n      \n        // axios.get('/api/view-users').then(res=> {\n        //     // console.log(\"user test data\",res.data.users);\n        //     if(res.data.status === 200){\n        //         setUsers(res.data.users);\n        //     }\n            \n        // });\n    },[props]);\n\n    let navigate = useNavigate();\n    const onSubmit = data => {\n        console.log(\"test image data\",data)\n        // axios.get('/sanctum/csrf-cookie').then(response => {\n        //     axios.post('/api/register', data)\n\n        //         .then(res => {\n\n        //             if (res.data.status === 200) {\n        //                 localStorage.setItem('auth_token', res.data.token);\n        //                 localStorage.setItem('auth_name', res.data.username);\n        //                 navigate('/login');\n        //                 store.addNotification({\n        //                     title: \"Success!\",\n        //                     message: \"Registered Successfully\",\n        //                     type: \"success\",\n        //                     insert: \"top\",\n        //                     container: \"top-right\",\n        //                     animationIn: [\"animated\", \"fadeIn\"],\n        //                     animationOut: [\"animated\", \"fadeOut\"],\n        //                     dismiss: {\n        //                         duration: 3000,\n        //                         onScreen: false\n        //                     }\n        //                 });\n        //             }\n\n        //             if (res.data.status === 422) {\n\n        //                 reset({ name: res.data.name, password: res.data.password, confirm_password: res.data.confirm_password });\n        //                 store.addNotification({\n\n        //                     title: \"Failed!\",\n        //                     message: res.data.message.email[0],\n        //                     type: \"danger\",\n        //                     insert: \"top\",\n        //                     container: \"top-right\",\n        //                     animationIn: [\"animated\", \"fadeIn\"],\n        //                     animationOut: [\"animated\", \"fadeOut\"],\n        //                     dismiss: {\n        //                         duration: 3000,\n        //                         onScreen: false\n        //                     }\n        //                 });\n\n        //             }\n\n        //         })\n        //         .catch(err => console.log(err));\n        // });\n    };\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\n    const validationSchema = Yup.object().shape({\n        phoneNumber: Yup.string().matches(phoneRegExp, 'Phone number is not valid')\n        .min(10, \"too short\")\n        .max(10, \"too long\"),\n        // name: Yup.string().required('Fullname is required'),\n        // username: Yup.string()\n        //     .required('Username is required')\n        //     .min(6, 'Username must be at least 6 characters')\n        //     .max(20, 'Username must not exceed 20 characters'),\n        image: Yup.mixed()\n        .test(\n          \"numberOfFiles\",\n          \"Image field is required\",\n          (value) => {\n            if (value.length > 0) return true;\n            return false;\n          }\n        ).test(\"fileSize\", \"error information\", (value) => {\n            if (value.length > 0) return value[0].size <= 5242880;\n            return false;\n          }).test(\n            \"fileType\",\n            \"error information\",\n            (value) => {\n              if (value.length === 0) return false;\n              for (var i = 0; i < value.length; i++) {\n                if (\n                  ![\"image/jpeg\", \"image/png\", \"image/jpg\"].includes(value[i].type)\n                )\n                  return false;\n              }\n              return true;\n            }\n          ),\n\n        // email: Yup.string()\n        //     .required('Email is required')\n        //     .email('Email is invalid'),\n\n        doj: Yup.string().required('DOJ field is required'),\n\n        document: Yup.mixed()\n        .test(\n          \"numberOfFiles\",\n          \"CV field is required\",\n          (value) => {\n            if (value.length > 0) return true;\n            return false;\n          }\n        ).test(\"fileSize\", \"Size Error\", (value) => {\n            if (value.length > 0) return value[0].size <= 5242880;\n            return false;\n          }).test(\n            \"fileType\",\n            \"Invalid File Format\",\n            (value) => {\n              if (value.length === 0) return false;\n              for (var i = 0; i < value.length; i++) {\n                if (\n                  ![\"application/pdf\", \"application/doc\",\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.oasis.opendocument.text\"].includes(value[i].type)\n                )\n                  return false;\n              }\n              return true;\n            }\n          ),\n        \n        gender: Yup.string()\n            .required('Gender field is required'),\n        \n        about: Yup.string()\n        .required('About field is required'),\n        // password: Yup.string()\n        //     .required('Password is required')\n        //     .min(8, 'Password must be at least 8 characters')\n        //     .max(40, 'Password must not exceed 40 characters'),\n        // confirm_password: Yup.string()\n        //     .required('Confirm Password is required')\n        //     .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n        // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(validationSchema) });\n\n    \n\n    return (\n\n\n                                <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                                    <div className=\"form-group mb-3\">\n                                        <label>Phone Number :</label>\n                                        <input type=\"text\" name=\"phoneNumber\" {...register('phoneNumber')} className={`form-control rounded-0 ${errors.phoneNumber ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.phoneNumber?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>DOJ :</label>\n                                        <input type=\"date\" name=\"doj\" {...register('doj')} className={`form-control rounded-0 ${errors.doj ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.doj?.message}</div>\n                                    </div>\n                                    \n                                    <div className=\"form-group mb-3\">\n                                        <label>Image:</label>\n                                        <input type=\"file\" name=\"image\" {...register('image')} className={`form-control rounded-0 ${errors.image ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.image?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>CV :</label>\n                                        <input type=\"file\" name=\"document\" {...register('document')} className={`form-control rounded-0 ${errors.document ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.document?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>Gender :</label>\n                                        <select type=\"text\" name=\"gender\" {...register('gender')} className={`form-control select rounded-0 ${errors.gender ? 'is-invalid' : ''}`}>\n                                            <option value=\"\">Select Gender</option>\n                                            <option>Male</option>\n                                            <option>Female</option>\n                                        </select>\n                                        <div className=\"invalid-feedback\">{errors.gender?.message}</div>\n                                    </div>\n\n                                <div className=\"form-group mb-3\">\n                                        <label>About :</label>\n                                        <textarea type=\"text\" name=\"about\" {...register('about')} className={`form-control rounded-0 ${errors.about ? 'is-invalid' : ''}`} placeholder=\"About\" />\n                                        <div className=\"invalid-feedback\">{errors.about?.message}</div>\n                                    </div>\n                                    {/* <div className=\"form-group mb-3\">\n                                        <label>Password:</label>\n                                        <input type=\"password\" name=\"password\" {...register('password')} className={`form-control rounded-0 ${errors.password ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                                    </div>\n\n                                    <div className=\"form-group mb-3\">\n                                        <label>Confirm Password:</label>\n                                        <input type=\"password\" name=\"confirm_password\" {...register('confirm_password')} className={`form-control rounded-0 ${errors.confirm_password ? 'is-invalid' : ''}`} />\n                                        <div className=\"invalid-feedback\">{errors.confirm_password?.message}</div>\n                                    </div> */}\n                                    <div className=\"form-group mb-3\">\n                                        <button type=\"submit\" className=\"btn btn-primary rounded-0\">Submit</button>\n                                        {/* <button type=\"button\" onClick={reset} className=\"btn btn-warning float-right ms-2\">Reset</button> */}\n                                    </div>\n                                </form>\n                            \n    )\n}\n\nexport default AddUsers;"]},"metadata":{},"sourceType":"module"}