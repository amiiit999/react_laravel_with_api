{"ast":null,"code":"var _jsxFileName = \"/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/auth/Register.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\nimport { store } from \"react-notifications-component\"; // Login...\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password, _errors$confirm_passw;\n\n  let navigate = useNavigate();\n\n  const onSubmit = data => {\n    axios.get('/sanctum/csrf-cookie').then(response => {\n      axios.post('/api/register', data).then(res => {\n        console.log(\"response\", res.data.message.email[0]);\n\n        if (res.data.status === 200) {\n          navigate('/login');\n          store.addNotification({\n            title: \"Success!\",\n            message: \"Registered Successfully\",\n            type: \"success\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 2000,\n              onScreen: false\n            }\n          });\n        }\n\n        if (res.data.status === 204) {\n          console.log(\"validation\", validationSchema._nodes[2]);\n          requesvalidationSchema._nodes[2] = \"\";\n          store.addNotification({\n            title: \"Failed!\",\n            message: res.data.message.email[0],\n            type: \"danger\",\n            insert: \"top\",\n            container: \"top-right\",\n            animationIn: [\"animated\", \"fadeIn\"],\n            animationOut: [\"animated\", \"fadeOut\"],\n            dismiss: {\n              duration: 3000,\n              onScreen: false\n            }\n          });\n        }\n      }).catch(err => console.log(err));\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Fullname is required'),\n    // username: Yup.string()\n    //     .required('Username is required')\n    //     .min(6, 'Username must be at least 6 characters')\n    //     .max(20, 'Username must not exceed 20 characters'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters').max(40, 'Password must not exceed 40 characters'),\n    confirm_password: Yup.string().required('Confirm Password is required').oneOf([Yup.ref('password'), null], 'Confirm Password does not match') // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n\n  });\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card rounded-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-secondary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              method: \"POST\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Full Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  name: \"name\",\n                  ...register('name'),\n                  className: `form-control ${errors.name ? 'is-invalid' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Email:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  name: \"email\",\n                  ...register('email'),\n                  className: `form-control ${errors.email ? 'is-invalid' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"password\",\n                  ...register('password'),\n                  className: `form-control ${errors.password ? 'is-invalid' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Confirm Password:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  name: \"confirm_password\",\n                  ...register('confirm_password'),\n                  className: `form-control ${errors.confirm_password ? 'is-invalid' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: (_errors$confirm_passw = errors.confirm_password) === null || _errors$confirm_passw === void 0 ? void 0 : _errors$confirm_passw.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group mb-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"submit\",\n                  className: \"btn btn-primary\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"Drk4EFrfcNRae/IdHET9JgzcaFM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/var/www/html/Mr_amiit/cubedotsProjects/react_laravel_api_project_dec21/react_laravel_rest_api/src/components/frontend/auth/Register.js"],"names":["React","axios","useForm","yupResolver","Yup","useNavigate","store","Register","navigate","onSubmit","data","get","then","response","post","res","console","log","message","email","status","addNotification","title","type","insert","container","animationIn","animationOut","dismiss","duration","onScreen","validationSchema","_nodes","requesvalidationSchema","catch","err","object","shape","name","string","required","password","min","max","confirm_password","oneOf","ref","register","handleSubmit","reset","formState","errors","resolver"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useNavigate } from \"react-router-dom\";\n\nimport { store } from \"react-notifications-component\";\n\n    // Login...\n\n\nfunction Register() {\n    let navigate = useNavigate();\n    const onSubmit = data => {\n        \n        axios.get('/sanctum/csrf-cookie').then(response => {\n           \n       \n                axios.post('/api/register', data)\n                .then(res => {\n                    console.log(\"response\",res.data.message.email[0])\n\n                if(res.data.status === 200)  {\n                    navigate('/login');\n                    store.addNotification({\n                        title: \"Success!\",\n                        message:\n                          \"Registered Successfully\",\n                        type: \"success\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                          duration: 2000,\n                          onScreen: false\n                        }\n                      });\n                }\n                \n                if(res.data.status === 204)  {\n                    console.log(\"validation\", validationSchema._nodes[2])\n                    requesvalidationSchema._nodes[2] = \"\";\n                    store.addNotification({\n                        \n                        title: \"Failed!\",\n                        message: res.data.message.email[0],\n                        type: \"danger\",\n                        insert: \"top\",\n                        container: \"top-right\",\n                        animationIn: [\"animated\", \"fadeIn\"],\n                        animationOut: [\"animated\", \"fadeOut\"],\n                        dismiss: {\n                          duration: 3000,\n                          onScreen: false\n                        }\n                      });\n                      \n                } \n                    \n                })\n                .catch(err => console.log(err));\n            });\n     };\n     \n     const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Fullname is required'),\n        // username: Yup.string()\n        //     .required('Username is required')\n        //     .min(6, 'Username must be at least 6 characters')\n        //     .max(20, 'Username must not exceed 20 characters'),\n        email: Yup.string()\n            .required('Email is required')\n            .email('Email is invalid'),\n        password: Yup.string()\n            .required('Password is required')\n            .min(8, 'Password must be at least 8 characters')\n            .max(40, 'Password must not exceed 40 characters'),\n        confirm_password: Yup.string()\n            .required('Confirm Password is required')\n            .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n        // acceptTerms: Yup.bool().oneOf([true], 'Accept Terms is required')\n    });\n    \n    const { register, handleSubmit, reset, formState: { errors } } = useForm({ resolver: yupResolver(validationSchema) });\n\n    \n    return (\n        <div className=\"container py-5\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-6\">\n                    <div className=\"card rounded-0\">\n                        <div className=\"card-header bg-secondary text-white\">\n                            <h4>Register</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmit(onSubmit)} method=\"POST\">\n                                <div className=\"form-group mb-3\">\n                                    <label>Full Name:</label>\n                                    <input type=\"text\" name=\"name\" {...register('name')} className={`form-control ${errors.name ? 'is-invalid' : ''}`} />\n                                    <div className=\"invalid-feedback\">{errors.name?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Email:</label>\n                                    <input type=\"email\" name=\"email\" {...register('email')} className={`form-control ${errors.email ? 'is-invalid' : ''}`} />\n                                    <div className=\"invalid-feedback\">{errors.email?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Password:</label>\n                                    <input type=\"password\" name=\"password\" {...register('password')} className={`form-control ${errors.password ? 'is-invalid' : ''}`} />\n                                    <div className=\"invalid-feedback\">{errors.password?.message}</div>\n                                </div>\n\n                                <div className=\"form-group mb-3\">\n                                    <label>Confirm Password:</label>\n                                    <input type=\"password\" name=\"confirm_password\" {...register('confirm_password')} className={`form-control ${errors.confirm_password ? 'is-invalid' : ''}`} />\n                                    <div className=\"invalid-feedback\">{errors.confirm_password?.message}</div>\n                                </div>\n                                <div className=\"form-group mb-3\">\n                                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n                                    {/* <button type=\"button\" onClick={reset} className=\"btn btn-warning float-right ms-2\">Reset</button> */}\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}