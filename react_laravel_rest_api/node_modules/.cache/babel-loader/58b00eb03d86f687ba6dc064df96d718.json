{"ast":null,"code":"import { getIn } from 'formik';\nimport { Checkbox, ChoiceGroup, ColorPicker, DatePicker, Dropdown, CompactPeoplePicker, ListPeoplePicker, NormalPeoplePicker, Rating, Slider, SpinButton, SwatchColorPicker, MaskedTextField, TextField, Toggle } from 'office-ui-fabric-react';\nimport { createElement } from 'react';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nfunction getErrorMessage(_a) {\n  var field = _a.field,\n      form = _a.form;\n  var error = getIn(form.errors, field.name);\n  var touched = getIn(form.touched, field.name);\n  return touched ? error : undefined;\n}\n\nfunction invokeAll() {\n  var callbacks = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    callbacks[_i] = arguments[_i];\n  }\n\n  return function () {\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n      var callback = callbacks_1[_i];\n\n      if (callback && typeof callback === 'function') {\n        callback();\n      }\n    }\n  };\n}\n\nfunction createFakeEvent(_a) {\n  var name = _a.name;\n  return {\n    target: {\n      name: name\n    }\n  };\n}\n\nfunction mapFieldToCheckbox(_a) {\n  var form = _a.form,\n      _b = _a.field,\n      value = _b.value,\n      onChange = _b.onChange,\n      onBlur = _b.onBlur,\n      field = __rest(_b, [\"value\", \"onChange\", \"onBlur\"]);\n\n  return __assign({}, field, {\n    onChange: function (_, checked) {\n      form.setFieldValue(field.name, checked);\n      onBlur(createFakeEvent(field));\n    },\n    checked: value\n  });\n}\n\nfunction FormikCheckbox(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(Checkbox, __assign({}, props, mapFieldToCheckbox({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToChoiceGroup(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    name: field.name,\n    selectedKey: field.value,\n    onChange: function (_, option) {\n      form.setFieldValue(field.name, option ? option.key : null);\n      field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikChoiceGroup(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(ChoiceGroup, __assign({}, props, mapFieldToChoiceGroup({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToColorPicker(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    color: field.value,\n    onColorChanged: function (color) {\n      form.setFieldValue(field.name, color), field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikColorPicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(ColorPicker, __assign({}, props, mapFieldToColorPicker({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToDatePicker(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    value: field.value,\n    onAfterMenuDismiss: function () {\n      return field.onBlur(createFakeEvent(field));\n    },\n    onSelectDate: function (date) {\n      return form.setFieldValue(field.name, date);\n    }\n  };\n}\n\nfunction FormikDatePicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  var _b = mapFieldToDatePicker({\n    field: field,\n    form: form\n  }),\n      onAfterMenuDismiss = _b.onAfterMenuDismiss,\n      fieldProps = __rest(_b, [\"onAfterMenuDismiss\"]);\n\n  return createElement(DatePicker, __assign({}, props, {\n    onAfterMenuDismiss: invokeAll(onAfterMenuDismiss, props.onAfterMenuDismiss)\n  }, fieldProps));\n}\n\nfunction mapFieldToDropdown(_a) {\n  var form = _a.form,\n      field = _a.field;\n  var multiSelect = Array.isArray(field.value);\n  var shared = {\n    errorMessage: getErrorMessage({\n      field: field,\n      form: form\n    }),\n    onDismiss: function () {\n      return field.onBlur(createFakeEvent(field));\n    }\n  };\n  return multiSelect ? __assign({}, shared, {\n    selectedKeys: field.value,\n    onChange: function (_, option) {\n      var value = field.value;\n\n      if (option.selected) {\n        form.setFieldValue(field.name, value.concat([option.key]));\n      } else {\n        var idx = field.value.indexOf(option.key);\n\n        if (idx !== -1) {\n          form.setFieldValue(field.name, value.slice(0, idx).concat(value.slice(idx + 1)));\n        }\n      }\n    }\n  }) : __assign({}, shared, {\n    selectedKey: field.value,\n    onChange: function (_, option) {\n      form.setFieldValue(field.name, option.key);\n    }\n  });\n}\n\nfunction FormikDropdown(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  var _b = mapFieldToDropdown({\n    field: field,\n    form: form\n  }),\n      errorMessage = _b.errorMessage,\n      onDismiss = _b.onDismiss,\n      fieldProps = __rest(_b, [\"errorMessage\", \"onDismiss\"]);\n\n  return createElement(Dropdown, __assign({\n    errorMessage: errorMessage\n  }, props, {\n    onDismiss: invokeAll(onDismiss, props.onDismiss)\n  }, fieldProps));\n}\n\nfunction mapFieldToPeoplePicker(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    selectedItems: field.value,\n    onBlur: function () {\n      return field.onBlur(createFakeEvent(field));\n    },\n    onChange: function (items) {\n      return form.setFieldValue(field.name, items);\n    }\n  };\n}\n\nfunction FormikNormalPeoplePicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(NormalPeoplePicker, __assign({}, props, mapFieldToPeoplePicker({\n    field: field,\n    form: form\n  })));\n}\n\nfunction FormikCompactPeoplePicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(CompactPeoplePicker, __assign({}, props, mapFieldToPeoplePicker({\n    field: field,\n    form: form\n  })));\n}\n\nfunction FormikListPeoplePicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(ListPeoplePicker, __assign({}, props, mapFieldToPeoplePicker({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToRating(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    value: field.value,\n    onChange: function (_, value) {\n      form.setFieldValue(field.name, value);\n      field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikRating(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(Rating, __assign({}, props, mapFieldToRating({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToSlider(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    value: field.value,\n    onChange: function (value) {\n      form.setFieldValue(field.name, value);\n    },\n    onChanged: function () {\n      return field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikSlider(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(Slider, __assign({}, props, mapFieldToSlider({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToSpinButton(_a, _b) {\n  var form = _a.form,\n      field = _a.field;\n\n  var _c = _b === void 0 ? {} : _b,\n      min = _c.min,\n      max = _c.max,\n      onIncrement = _c.onIncrement,\n      onDecrement = _c.onDecrement,\n      onValidate = _c.onValidate;\n\n  var handleIncrement = function (value) {\n    var newValue = onIncrement ? onIncrement(value) : Math.min(typeof max === 'number' ? max : -Infinity, +value + 1);\n    form.setFieldValue(field.name, newValue);\n    field.onBlur(createFakeEvent(field));\n    return \"\" + newValue;\n  };\n\n  var handleDecrement = function (value) {\n    var newValue = onDecrement ? onDecrement(value) : Math.max(typeof min === 'number' ? min : Infinity, +value - 1);\n    form.setFieldValue(field.name, newValue);\n    field.onBlur(createFakeEvent(field));\n    return \"\" + newValue;\n  };\n\n  var handleValidate = function (value) {\n    var newValue = onValidate ? onValidate(value) : +value;\n    form.setFieldValue(field.name, newValue);\n    return \"\" + newValue;\n  };\n\n  return {\n    value: field.value,\n    onIncrement: handleIncrement,\n    onDecrement: handleDecrement,\n    onValidate: handleValidate,\n    onBlur: function () {\n      return field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikSpinButton(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(SpinButton, __assign({}, props, mapFieldToSpinButton({\n    field: field,\n    form: form\n  }, props)));\n}\n\nfunction mapFieldToSwatchColorPicker(_a) {\n  var form = _a.form,\n      field = _a.field;\n  var valueType = typeof field.value;\n  return {\n    selectedId: valueType === 'string' ? field.value : field.value ? field.value.id : null,\n    onColorChanged: function (id, color) {\n      form.setFieldValue(field.name, valueType === 'string' ? color : {\n        id: id,\n        color: color\n      });\n      field.onBlur(createFakeEvent(field));\n    }\n  };\n}\n\nfunction FormikSwatchColorPicker(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(SwatchColorPicker, __assign({}, props, mapFieldToSwatchColorPicker({\n    field: field,\n    form: form\n  })));\n}\n\nfunction mapFieldToTextField(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return __assign({}, field, {\n    errorMessage: getErrorMessage({\n      form: form,\n      field: field\n    })\n  });\n}\n\nfunction mapFieldToMaskedTextField(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return __assign({}, mapFieldToTextField({\n    form: form,\n    field: field\n  }), {\n    onChange: function (_, value) {\n      return form.setFieldValue(field.name, value);\n    }\n  });\n}\n\nfunction FormikTextField(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  var _b = mapFieldToTextField({\n    field: field,\n    form: form\n  }),\n      errorMessage = _b.errorMessage,\n      fieldProps = __rest(_b, [\"errorMessage\"]);\n\n  return createElement(TextField, __assign({\n    errorMessage: errorMessage\n  }, props, fieldProps));\n}\n\nfunction FormikMaskedTextField(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  var _b = mapFieldToMaskedTextField({\n    field: field,\n    form: form\n  }),\n      errorMessage = _b.errorMessage,\n      fieldProps = __rest(_b, [\"errorMessage\"]);\n\n  return createElement(MaskedTextField, __assign({\n    errorMessage: errorMessage\n  }, props, fieldProps));\n}\n\nfunction mapFieldToToggle(_a) {\n  var form = _a.form,\n      field = _a.field;\n  return {\n    onChange: function (_, checked) {\n      form.setFieldValue(field.name, checked);\n      field.onBlur(createFakeEvent(field));\n    },\n    checked: field.value\n  };\n}\n\nfunction FormikToggle(_a) {\n  var field = _a.field,\n      form = _a.form,\n      props = __rest(_a, [\"field\", \"form\"]);\n\n  return createElement(Toggle, __assign({}, props, mapFieldToToggle({\n    field: field,\n    form: form\n  })));\n}\n\nexport { mapFieldToCheckbox, FormikCheckbox, mapFieldToChoiceGroup, FormikChoiceGroup, mapFieldToColorPicker, FormikColorPicker, mapFieldToDatePicker, FormikDatePicker, mapFieldToDropdown, FormikDropdown, mapFieldToPeoplePicker, FormikNormalPeoplePicker, FormikCompactPeoplePicker, FormikListPeoplePicker, mapFieldToRating, FormikRating, mapFieldToSlider, FormikSlider, mapFieldToSpinButton, FormikSpinButton, mapFieldToSwatchColorPicker, FormikSwatchColorPicker, mapFieldToTextField, mapFieldToMaskedTextField, FormikTextField, FormikMaskedTextField, mapFieldToToggle, FormikToggle };","map":{"version":3,"sources":["../src/utils.ts","../src/FormikCheckbox.tsx","../src/FormikChoiceGroup.tsx","../src/FormikColorPicker.tsx","../src/FormikDatePicker.tsx","../src/FormikDropdown.tsx","../src/FormikPeoplePicker.tsx","../src/FormikRating.tsx","../src/FormikSlider.tsx","../src/FormikSpinButton.tsx","../src/FormikSwatchColorPicker.tsx","../src/FormikTextField.tsx","../src/FormikToggle.tsx"],"names":["React.createElement"],"mappings":"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","sourcesContent":["import { FieldProps, getIn } from 'formik'\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>\n\nexport function getErrorMessage<T = any>({ field, form }: FieldProps<T>) {\n  const error = getIn(form.errors, field.name)\n  const touched = getIn(form.touched, field.name)\n\n  return touched ? error : undefined\n}\n\nexport function invokeAll(...callbacks: any[]) {\n  return () => {\n    for (const callback of callbacks) {\n      if (callback && typeof callback === 'function') {\n        callback()\n      }\n    }\n  }\n}\n\nexport function createFakeEvent({ name }: { name: string }) {\n  return { target: { name } }\n}\n","import { FieldProps } from 'formik'\nimport { Checkbox, ICheckboxProps } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToCheckbox<T = any>({\n  form,\n  field: { value, onChange, onBlur, ...field },\n}: FieldProps<T>): Pick<ICheckboxProps, 'checked' | 'name' | 'onChange'> {\n  return {\n    ...field,\n    onChange: (_, checked) => {\n      form.setFieldValue(field.name, checked)\n      onBlur(createFakeEvent(field))\n    },\n    checked: value,\n  }\n}\n\nexport type FormikCheckboxProps<T = any> = Omit<\n  ICheckboxProps,\n  'value' | 'checked' | 'name' | 'onChange' | 'onBlur' | 'form'\n> &\n  FieldProps<T>\n\nexport function FormikCheckbox<T = any>({\n  field,\n  form,\n  ...props\n}: FormikCheckboxProps<T>) {\n  return <Checkbox {...props} {...mapFieldToCheckbox({ field, form })} />\n}\n","import { FieldProps } from 'formik'\nimport { ChoiceGroup, IChoiceGroupProps } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToChoiceGroup<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  IChoiceGroupProps,\n  'selectedKey' | 'onChange' | 'name'\n> {\n  return {\n    name: field.name,\n    selectedKey: field.value,\n    onChange: (_, option) => {\n      form.setFieldValue(field.name, option ? option!.key : null)\n      field.onBlur(createFakeEvent(field))\n    },\n  }\n}\n\nexport type FormikChoiceGroupProps<T = any> = Omit<\n  IChoiceGroupProps,\n  'selectedKey' | 'name' | 'onChange' | 'onBlur' | 'form'\n> &\n  FieldProps<T>\n\nexport function FormikChoiceGroup<T = any>({\n  field,\n  form,\n  ...props\n}: FormikChoiceGroupProps<T>) {\n  return <ChoiceGroup {...props} {...mapFieldToChoiceGroup({ field, form })} />\n}\n","import { FieldProps } from 'formik'\nimport { ColorPicker, IColorPickerProps } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToColorPicker<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<IColorPickerProps, 'color' | 'onColorChanged'> {\n  return {\n    color: field.value,\n    onColorChanged: color => {\n      form.setFieldValue(field.name, color),\n        field.onBlur(createFakeEvent(field))\n    },\n  }\n}\nexport type FormikColorPickerProps<T = any> = Omit<\n  IColorPickerProps,\n  'color' | 'onColorChanged'\n> &\n  FieldProps<T>\n\nexport function FormikColorPicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikColorPickerProps<T>) {\n  return (\n    <ColorPicker\n      {...props}\n      {...mapFieldToColorPicker({\n        field,\n        form,\n      })}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport { DatePicker, IDatePickerProps } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, invokeAll, Omit } from './utils'\n\nexport function mapFieldToDatePicker<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  IDatePickerProps,\n  'value' | 'onSelectDate' | 'onAfterMenuDismiss'\n> {\n  return {\n    value: field.value,\n    onAfterMenuDismiss: () => field.onBlur(createFakeEvent(field)),\n    onSelectDate: date => form.setFieldValue(field.name, date),\n  }\n}\nexport type FormikDatePickerProps<T = any> = Omit<\n  IDatePickerProps,\n  'value' | 'onSelectDate' | 'onBlur' | 'onChange'\n> &\n  FieldProps<T>\n\nexport function FormikDatePicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikDatePickerProps<T>) {\n  const { onAfterMenuDismiss, ...fieldProps } = mapFieldToDatePicker({\n    field,\n    form,\n  })\n\n  return (\n    <DatePicker\n      {...props}\n      onAfterMenuDismiss={invokeAll(\n        onAfterMenuDismiss,\n        props.onAfterMenuDismiss\n      )}\n      {...fieldProps}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport { Dropdown, IDropdownProps } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, getErrorMessage, invokeAll, Omit } from './utils'\n\nexport function mapFieldToDropdown<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  IDropdownProps,\n  'selectedKey' | 'selectedKeys' | 'onDismiss' | 'onChange' | 'errorMessage'\n> {\n  const multiSelect = Array.isArray(field.value)\n  const shared = {\n    errorMessage: getErrorMessage({ field, form }),\n    onDismiss: () => field.onBlur(createFakeEvent(field)),\n  }\n\n  return multiSelect\n    ? {\n        ...shared,\n        selectedKeys: field.value,\n        onChange: (_, option) => {\n          const value = field.value as any[]\n\n          if (option!.selected) {\n            form.setFieldValue(field.name, [...value, option!.key])\n          } else {\n            const idx = field.value.indexOf(option!.key)\n\n            if (idx !== -1) {\n              form.setFieldValue(field.name, [\n                ...value.slice(0, idx),\n                ...value.slice(idx + 1),\n              ])\n            }\n          }\n        },\n      }\n    : {\n        ...shared,\n        selectedKey: field.value,\n        onChange: (_, option) => {\n          form.setFieldValue(field.name, option!.key)\n        },\n      }\n}\n\nexport type FormikDropdownProps<T> = Omit<IDropdownProps, 'selectedKey'> &\n  FieldProps<T>\nexport function FormikDropdown<T = any>({\n  field,\n  form,\n  ...props\n}: FormikDropdownProps<T>) {\n  const { errorMessage, onDismiss, ...fieldProps } = mapFieldToDropdown({\n    field,\n    form,\n  })\n\n  return (\n    <Dropdown\n      errorMessage={errorMessage}\n      {...props}\n      onDismiss={invokeAll(onDismiss, props.onDismiss)}\n      {...fieldProps}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport {\n  CompactPeoplePicker,\n  IPeoplePickerProps,\n  ListPeoplePicker,\n  NormalPeoplePicker,\n} from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToPeoplePicker<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  IPeoplePickerProps,\n  'selectedItems' | 'onChange' | 'onBlur'\n> {\n  return {\n    selectedItems: field.value,\n    onBlur: () => field.onBlur(createFakeEvent(field)),\n    onChange: items => form.setFieldValue(field.name, items),\n  }\n}\nexport type FormikPeoplePickerProps<T = any> = Omit<\n  IPeoplePickerProps,\n  'selectedItems' | 'onBlur' | 'onChange'\n> &\n  FieldProps<T>\n\nexport function FormikNormalPeoplePicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikPeoplePickerProps<T>) {\n  return (\n    <NormalPeoplePicker\n      {...props}\n      {...mapFieldToPeoplePicker({\n        field,\n        form,\n      })}\n    />\n  )\n}\n\nexport function FormikCompactPeoplePicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikPeoplePickerProps<T>) {\n  return (\n    <CompactPeoplePicker\n      {...props}\n      {...mapFieldToPeoplePicker({\n        field,\n        form,\n      })}\n    />\n  )\n}\n\nexport function FormikListPeoplePicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikPeoplePickerProps<T>) {\n  return (\n    <ListPeoplePicker\n      {...props}\n      {...mapFieldToPeoplePicker({\n        field,\n        form,\n      })}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport { IRatingProps, Rating } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToRating<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<IRatingProps, 'value' | 'onChange'> {\n  return {\n    value: field.value,\n    onChange: (_, value) => {\n      form.setFieldValue(field.name, value)\n      field.onBlur(createFakeEvent(field))\n    },\n  }\n}\n\nexport type FormikRatingProps<T = any> = Omit<\n  IRatingProps,\n  'value' | 'onChange' | 'onBlur' | 'form'\n> &\n  FieldProps<T>\n\nexport function FormikRating<T = any>({\n  field,\n  form,\n  ...props\n}: FormikRatingProps<T>) {\n  return <Rating {...props} {...mapFieldToRating({ field, form })} />\n}\n","import { FieldProps } from 'formik'\nimport { ISliderProps, Slider } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToSlider<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<ISliderProps, 'value' | 'onChange' | 'onChanged'> {\n  return {\n    value: field.value,\n    onChange: value => {\n      form.setFieldValue(field.name, value)\n    },\n    onChanged: () => field.onBlur(createFakeEvent(field)),\n  }\n}\n\nexport type FormikSliderProps<T = any> = Omit<\n  ISliderProps,\n  'value' | 'onChange' | 'onChanged'\n> &\n  FieldProps<T>\n\nexport function FormikSlider<T = any>({\n  field,\n  form,\n  ...props\n}: FormikSliderProps<T>) {\n  return <Slider {...props} {...mapFieldToSlider({ field, form })} />\n}\n","import { FieldProps } from 'formik'\nimport { ISpinButtonProps, SpinButton } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToSpinButton<T = any>(\n  { form, field }: FieldProps<T>,\n  {\n    min,\n    max,\n    onIncrement,\n    onDecrement,\n    onValidate,\n  }: Pick<\n    ISpinButtonProps,\n    'min' | 'max' | 'onIncrement' | 'onDecrement' | 'onValidate'\n  > = {}\n): Pick<\n  ISpinButtonProps,\n  'value' | 'onIncrement' | 'onDecrement' | 'onValidate' | 'onBlur'\n> {\n  const handleIncrement = (value: string) => {\n    const newValue = onIncrement\n      ? onIncrement(value)\n      : Math.min(typeof max === 'number' ? max : -Infinity, +value + 1)\n\n    form.setFieldValue(field.name, newValue)\n    field.onBlur(createFakeEvent(field))\n\n    return `${newValue}`\n  }\n  const handleDecrement = (value: string) => {\n    const newValue = onDecrement\n      ? onDecrement(value)\n      : Math.max(typeof min === 'number' ? min : Infinity, +value - 1)\n\n    form.setFieldValue(field.name, newValue)\n    field.onBlur(createFakeEvent(field))\n\n    return `${newValue}`\n  }\n  const handleValidate = (value: string) => {\n    const newValue = onValidate ? onValidate(value) : +value\n\n    form.setFieldValue(field.name, newValue)\n\n    return `${newValue}`\n  }\n\n  return {\n    value: field.value,\n    onIncrement: handleIncrement,\n    onDecrement: handleDecrement,\n    onValidate: handleValidate,\n    onBlur: () => field.onBlur(createFakeEvent(field)),\n  }\n}\n\nexport type FormikSpinButtonProps<T = any> = Omit<ISpinButtonProps, 'value'> &\n  FieldProps<T>\n\nexport function FormikSpinButton<T = any>({\n  field,\n  form,\n  ...props\n}: FormikSpinButtonProps<T>) {\n  return (\n    <SpinButton {...props} {...mapFieldToSpinButton({ field, form }, props)} />\n  )\n}\n","import { FieldProps } from 'formik'\nimport {\n  ISwatchColorPickerProps,\n  SwatchColorPicker,\n} from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToSwatchColorPicker<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  ISwatchColorPickerProps,\n  'selectedId' | 'onColorChanged'\n> {\n  const valueType = typeof field.value\n\n  return {\n    selectedId:\n      valueType === 'string'\n        ? field.value\n        : field.value\n        ? field.value.id\n        : null,\n    onColorChanged: (id, color) => {\n      form.setFieldValue(\n        field.name,\n        valueType === 'string' ? color : { id, color }\n      )\n      field.onBlur(createFakeEvent(field))\n    },\n  }\n}\nexport type FormikSwatchColorPickerProps<T = any> = Omit<\n  ISwatchColorPickerProps,\n  'selectedId' | 'onColorChanged'\n> &\n  FieldProps<T>\n\nexport function FormikSwatchColorPicker<T = any>({\n  field,\n  form,\n  ...props\n}: FormikSwatchColorPickerProps<T>) {\n  return (\n    <SwatchColorPicker\n      {...props}\n      {...mapFieldToSwatchColorPicker({\n        field,\n        form,\n      })}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport {\n  ITextFieldProps,\n  MaskedTextField,\n  TextField,\n} from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { getErrorMessage, Omit } from './utils'\n\nexport function mapFieldToTextField<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  ITextFieldProps,\n  'value' | 'name' | 'onChange' | 'onBlur' | 'errorMessage' | 'form'\n> {\n  return {\n    ...field,\n    errorMessage: getErrorMessage({ form, field }),\n  }\n}\n\nexport function mapFieldToMaskedTextField<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<\n  ITextFieldProps,\n  'value' | 'name' | 'onChange' | 'onBlur' | 'errorMessage' | 'form'\n> {\n  return {\n    ...mapFieldToTextField({ form, field }),\n    // ev hsa wrong balue for MaskedTextField\n    onChange: (_, value) => form.setFieldValue(field.name, value),\n  }\n}\n\nexport type FormikTextFieldProps<T = any> = Omit<\n  ITextFieldProps,\n  'value' | 'name' | 'onChange' | 'onBlur' | 'form'\n> &\n  FieldProps<T>\n\nexport function FormikTextField<T = any>({\n  field,\n  form,\n  ...props\n}: FormikTextFieldProps<T>) {\n  const { errorMessage, ...fieldProps } = mapFieldToTextField({ field, form })\n\n  return (\n    <TextField\n      errorMessage={errorMessage} // allow for prop overwrite\n      {...props}\n      {...fieldProps}\n    />\n  )\n}\n\nexport function FormikMaskedTextField<T = any>({\n  field,\n  form,\n  ...props\n}: FormikTextFieldProps<T>) {\n  const { errorMessage, ...fieldProps } = mapFieldToMaskedTextField({\n    field,\n    form,\n  })\n\n  return (\n    <MaskedTextField\n      errorMessage={errorMessage} // allow for prop overwrite\n      {...props}\n      {...fieldProps}\n    />\n  )\n}\n","import { FieldProps } from 'formik'\nimport { IToggleProps, Toggle } from 'office-ui-fabric-react'\nimport * as React from 'react'\nimport { createFakeEvent, Omit } from './utils'\n\nexport function mapFieldToToggle<T = any>({\n  form,\n  field,\n}: FieldProps<T>): Pick<IToggleProps, 'checked' | 'onChange'> {\n  return {\n    onChange: (_, checked) => {\n      form.setFieldValue(field.name, checked)\n      field.onBlur(createFakeEvent(field))\n    },\n    checked: field.value,\n  }\n}\n\nexport type FormikToggleProps<T = any> = Omit<\n  IToggleProps,\n  'checked' | 'onChange' | 'onBlur'\n> &\n  FieldProps<T>\n\nexport function FormikToggle<T = any>({\n  field,\n  form,\n  ...props\n}: FormikToggleProps<T>) {\n  return <Toggle {...props} {...mapFieldToToggle({ field, form })} />\n}\n"]},"metadata":{},"sourceType":"module"}